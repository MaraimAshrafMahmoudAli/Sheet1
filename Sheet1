public class MySpecialArrayUtils {

	public static void reverse(int[] arr) {

		int temp;
		for (int i = 0; i < (arr.length) / 2; i++) {
			temp = arr[i];
			arr[i] = arr[arr.length - 1 - i];
			arr[arr.length - 1 - i] = temp;
		}

	}

	public static int[] sumEvenOdd(int[] arr) {

		int[] sumEvenOdd = new int[2];
		int sumEven = 0;
		int sumOdd = 0;
		for (int i = 0; i < (arr.length); i++) {
			if (arr[i] % 2 == 0) {
				sumEven += arr[i];
			} else {
				sumOdd += arr[i];
			}
		}
		sumEvenOdd[0] = sumEven;
		sumEvenOdd[1] = sumOdd;

		return sumEvenOdd;

	}

	public static double average(int[] arr) {

		if (arr.length == 0) {
			return 0.0d;
		} else {
			double average;
			double sum = 0.0;
			for (int i = 0; i < arr.length; i++) {
				sum += (double) arr[i];
			}
			average = sum / arr.length;
			return average;
		}

	}

	public static void moveValue(int[] arr, int val) {

		int c = 0;
		for (int i = 0; i < arr.length; i++) {

			if (arr[i] == val) {
				c++;
			}
		}
		for (int k = 0; k < c; k++) {
			for (int i = 0; i < arr.length; i++) {
				if (arr[i] == val) {
					for (int j = i; j < arr.length - 1; j++) {
						arr[j] = arr[j + 1];
					}
					arr[arr.length - 1] = val;
				}
			}
		}

	}

	public static void transpose(int[][] arr) {

		int temp;
		int[][] array = new int[arr.length][arr.length];
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				array[i][j] = arr[i][j];
			}
		}
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				arr[i][j] = array[j][i];
			}
		}

	}

}





public class Fibonacci {

	public static String Fibonacci(int n) {

		if (n > 93) {
			return "Sorry:D, it's overflow!!";
		} else if (n <= 0) {
			return "Error!!";
		} else if (n == 1) {
			return "0";
		} else if (n == 2) {
			return "0, 1";
		} else {
			String Fibonacci = "";
			long fib;
			long i1 = 0;
			Fibonacci += i1;
			Fibonacci += ", ";
			long i2 = 1;
			Fibonacci += i2;
			Fibonacci += ", ";
			for (int i = 2; i < n; i++) {
				fib = i1 + i2;
				Fibonacci += fib;
				if (i < n - 1) {
					Fibonacci += ", ";
					i1 = i2;
					i2 = fib;
				} else {
					Fibonacci += ".";
					break;
				}

			}

			return Fibonacci;
		}

	}

}
